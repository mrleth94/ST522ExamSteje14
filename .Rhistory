e=0
for(i in 1:100){
if(d == 0){
e=e+1
}
}
return (e)
}
fun
fun()
fun()
fun()
fun()
fun()
fun()
fun <- function(){
d=sample(c(0,1),1,prob = c(0.1,0.9))
e=0
for(i in 1:100){
if(d == 0){
e=e+1
}
}
return (e)
}
fun()
fun()
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
X <- faitful$eruptions
X <- faithful$eruptions
return density1
return density1
#'
#' @export
#' @return
#'
#' @title ST522ExamSteje14
#' @description tja vent og se.
#' @usage densityEstimate(x,d,h,method)
#' @keywords density estimate
#'
#' @author Steffan Leth Jensen \cr
#' Department of mathematics and computer science (IMADA) \cr
#' University of southern Denmark, SDU, Odense \cr
#' \email{steje14@student.sdu.dk} \cr
#'
#' @examples
densityEstimate(x,d,h,method = "naive"){
###SYNTEX
#----------------------
#----------------------
density1 <- 0
if(method == "naive"){
v <- rep(0,length(x))
if (missing(d)){
} else {
for(i in 1:length(x)){
if(abs((d-x[i])/h)){
v[i] <- 1/2
}
}
density1 <- sum(v)/(length(x)*h)
}
} else {
if (missing(d)){
} else {
for(i in 1:length(x)){
v[i] <- exp(-((d-x[i])/h)^2)/sqrt(2*pi)
}
density1 <- sum(v)/(length(x)*h)
}
}
return(density1)
}
densityEstimate(X)
library(ST522ExamSteje14)
densityEstimate(X)
library(ST522ExamSteje14)
X
X <- faithfull
X <- faithful$eruptions
X
plot(density(X))
densityEstimate(X,2,0.3348)
points(2,1.4714)
library(ST522ExamSteje14)
densityEstimate(X,2,0.3348)
points(2,0.455715)
densityEstimate(X,2,0.3348,"kernel")
points(2,0.2956499)
library(ST522ExamSteje14)
densityEstimate(X,2,0.3348,"kernel")
densityEstimate(X,c(0,1),0.3348,"kernel")
densityEstimate(X,c(1,2),0.3348,"kernel")
densityEstimate(X,-2,0.3348,"kernel")
is.double(2.34)
is.double(2)
density(X)
library(ST522ExamSteje14)
densityEstimate(X)
densityEstimate(X,method = "kernel")
library(ST522ExamSteje14)
densityEstimate(X,method = "kernel")
for(i in 1:6){}
d <- densityEstimate(X,method = "kernel")
for(i in 1:6){
points(d[i,1],d[i,2])
}
plot(density(X))
for(i in 1:6){
points(d[i,1],d[i,2])
}
plot(density(X))
points(d[,1],d[,2])
densityEstimate(X,2,method = "kernel")
library(ST522ExamSteje14)
densityEstimate(X,2,method = "kernel")
plot(density(X))
d <- densityEstimate(X,method = "kernel")
points(d[,1],d[,2])
densityEstimate(X)
library(ST522ExamSteje14)
?seq()
seq(from,to,(to-from)/(n-1))
seq(from,to,(to-from)/(n-1))
seq(5,1,(1-5)/(n-1))
n=1000
seq(5,1,(1-5)/(n-1))
library(ST522ExamSteje14)
library(ST522ExamSteje14)
densityPlot(X)
library(ST522ExamSteje14)
densityPlot(X)
library(ST522ExamSteje14)
densityEstimate(X)
densityPlot(X)
library(ST522ExamSteje14)
densityPlot(X)
library(ST522ExamSteje14)
densityPlot(X)
densityPlot(X,method="kernel")
densityPlot(rbeta(10000,2.5,5.5),method="kernel")
library(ST522ExamSteje14)
View(bootstrap())
View(bootstrap)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
View(bootstrap)
View(bootstrap)
View(bootstrap)
bootstrap(-2,c(0,3),c(2,3))
bootstrap(2.4,c(0,3),c(2,3))
bootstrap(-2.4,c(0,3),c(2,3))
bootstrap(-2.4,c(0,3),c(2,3,5))
bootstrap(2,c(0,3),c(2,3,5))
bootstrap(2,c(0,3,5),c(2,3))
bootstrap(2,c(0,3),c(2,3),peter)
bootstrap(2,c(0,3),c(2,3),2)
bootstrap(2,c(0,3),c(2,3),true)
bootstrap(2,c(0,3),c(2,3),TRUE)
bootstrap(2,c(0,3,6),c(2,3,1),TRUE)
bootstrap(2,c(0,3,6,3),c(2,3,1,2),TRUE)
library(ST522ExamSteje14)
buffon(-2,3,4)
buffon(2.4,3,4)
buffon(-2.4,3,4)
library(ST522ExamSteje14)
buffon(-2.4,3,4)
buffon(2.4,3,4)
buffon(2,3,4)
buffon(2,3,-4)
buffon(2,3.2,-4)
buffon(2,3.2,4)
buffon(2,3.2,4.4)
buffon(2,1,6)
buffon(2,2,6)
buffon(2,1,6)
buffon(10,1,6)
buffon(10,6,1)
buffon(10,3,1)
buffon(10,pi,1)
buffon(10,pi,2)
buffon(10,pi,3)
buffon(10,pi,4)
buffon(10,pi,4)
buffon(10,pi,5)
library(ST522ExamSteje14)
chi.probability(-3,-2,34)
chi.probability(-3,2,34)
chi.probability(3,2,34)
chi.probability(3,2,-100)
chi.probability(3,2.2,-100)
chi.probability(c(2,3),2.2,-100)
chi.probability(c(2,3),2,-100)
chi.probability(c(2,3),2,100)
chi.probability(c(2,3,-.4),2,100)
chi.probability(c(2,3,-.4,-5),2,100)
chi.probability(c(2,3,-.23),2,100)
chi.probability(c(2,3,0),2,100)
chi.probability(c(2,3,0,100),2,100)
chi.probability(c(2,3,0,50),2,100)
chi.probability(TRUE,2,100)
chi.probability(TRUE,TRUE,100)
chi.probability(2,TRUE,100)
TRUE
as.integer
as.integer(TRUE)
TRUE = 1
TRUE = as.integer(TRUE)
TRUE == as.integer(TRUE)
TRUE >0
TRUE <0
TRUE =0
TRUE ==0
TRUE ==1
buffon(1000,TRUE,TRUE)
buffon(TRUE,2,3)
source('~/Dropbox/SDU/ST522ExamSteje14/R/bootstrap.R')
library(ST522ExamSteje14)
source('~/Dropbox/SDU/ST522ExamSteje14/R/bootstrap.R')
library(ST522ExamSteje14)
bootstrap(TRUE,c(0,1),c(2,3))
bootstrap(-2,c(0,1),c(2,3))
bootstrap(2.2,c(0,1),c(2,3))
bootstrap(2,c(0,1),c(2,3))
bootstrap(200,c(0,1),c(2,3))
bootstrap(200,c(0,1),c(2,3,6))
bootstrap(200,c(0,1,2),c(2,3,6))
bootstrap(200,c(0,1,2),c(2,3,6))
bootstrap(200,1:1000,2:1001)
bootstrap(200,1:1000,2:1004)
bootstrap(200,c(0,2),c(392,39))
bootstrap(200,c(0,2),c(392,39,4))
bootstrap(200,c(0,2,6),c(392,39,4))
bootstrap(200,c(0,2,4,6),c(390,39,3.9,0.39))
bootstrap(200,1:100,100:1)
bootstrap(TRUE,1:100,100:1)
bootstrap(TRUE,1:100,c(0,2))
bootstrap(1,c(0,2),c(0,2))
bootstrap(2,c(0,2),c(0,2))
bootstrap(1,c(0,2),c(0,2))
bootstrap(2,c(0,2,3),c(0,2,4))
bootstrap(2,c(0,2,3,5),c(0,2,4,6))
bootstrap(10,c(0,2,3,5),c(0,2,4,6))
bootstrap(100,c(0,2,3,5),c(0,2,4,6))
bootstrap(100,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(10,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(5,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(6,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(7,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(8,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(9,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(10,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(15,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(50,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(40,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(20,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(30,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(25,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(29,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(28,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(29,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(40,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(45,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(40,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(45,c(0,2,3,5),c(0,2,4,6),FALSE)
bootstrap(45,c(1,2,3,5),c(1,2,4,6),FALSE)
bootstrap(1,c(1,2,3,5),c(1,2,4,6),FALSE)
source('~/Dropbox/SDU/ST522ExamSteje14/R/bootstrap.R')
library(ST522ExamSteje14)
bootstrap(1,c(1,2,3,5),c(1,2,4,6),FALSE)
source('~/Dropbox/SDU/ST522ExamSteje14/R/bootstrap.R')
source('~/Dropbox/SDU/ST522ExamSteje14/R/bootstrap.R')
library(ST522ExamSteje14)
bootstrap(1,c(1,2,3,5),c(1,2,4,6),FALSE)
library(ST522ExamSteje14)
chi.gof(2,3)
chi.gof(2,1)
chi.gof(c(2,3),1)
chi.gof(c(2,3),c(0.2,.8))
chi.gof(c(2,6),c(0.2,.8))
chi.gof(1,1)
chi.gof(2,1)
chi.gof(2,true)
chi.gof(2,TRUE)
chi.gof()
library(ST522ExamSteje14)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
library(ST522ExamSteje14)
densityEstimate(faithful$eruptions)
linMod <- function(formula){
### The first 4 lines is from r's function lm(), it's line 7,8,13,14 in lm()
mcall <- match.call() # will not be cange during til function, this is only for summary in the end
mf <- match.call() # Setup the matrix
mf[[1L]] <- quote(stats::model.frame) # 1L is 1 as a integer.
mf <- eval(mf, parent.frame())
## this matrix have dimensions:
nrows <- dim(mf)[1]
ncols <- dim(mf)[2]
mf
}
formula <- cars$speed ~ cars$dist
linMod(formula)
formula
library(ST522ExamSteje14)
linMod(formula)
ST522ExamSteje14::linMod(formula())
ST522ExamSteje14::linMod(formula
)
ST522ExamSteje14::linMod(formula)
formula1 <- cars$speed~cars$dist
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
formula1
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
lm(formula1)
summary(lm(formula1))
library(ST522ExamSteje14)
linMod(formula1)
formula2 <- cars$dist~cars$speed
linMod(formula2)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
View(pf)
library(ST522ExamSteje14)
View(pf)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
summary(lm(formula1))
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
summary(lm(formula1))
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
summery(lm(formula1))
summary(lm(formula1))
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
summary(lm(formula1))
linMod(formula1)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
library(ST522ExamSteje14)
linMod(formula1)
n     <- 20                    # length of vector
rho   <- 0.6                   # desired correlation = cos(angle)
theta <- acos(rho)             # corresponding angle
x1    <- rnorm(n, 1, 1)        # fixed given data
x2    <- rnorm(n, 2, 0.5)      # new random data
X     <- cbind(x1, x2)         # matrix
Xctr  <- scale(X, center=TRUE, scale=FALSE)   # centered columns (mean 0)
Id   <- diag(n)                               # identity matrix
Q    <- qr.Q(qr(Xctr[ , 1, drop=FALSE]))      # QR-decomposition, just matrix Q
P    <- tcrossprod(Q)          # = Q Q'       # projection onto space defined by x1
x2o  <- (Id-P) %*% Xctr[ , 2]                 # x2ctr made orthogonal to x1ctr
Xc2  <- cbind(Xctr[ , 1], x2o)                # bind to matrix
Y    <- Xc2 %*% diag(1/sqrt(colSums(Xc2^2)))  # scale columns to length 1
x <- Y[ , 2] + (1 / tan(theta)) * Y[ , 1]     # final new vector
cor(x1, x)
n     <- 20                    # length of vector
rho   <- 0.7                   # desired correlation = cos(angle)
theta <- acos(rho)             # corresponding angle
x1    <- rnorm(n, 1, 1)        # fixed given data
x2    <- rnorm(n, 2, 0.5)      # new random data
X     <- cbind(x1, x2)         # matrix
Xctr  <- scale(X, center=TRUE, scale=FALSE)   # centered columns (mean 0)
Id   <- diag(n)                               # identity matrix
Q    <- qr.Q(qr(Xctr[ , 1, drop=FALSE]))      # QR-decomposition, just matrix Q
P    <- tcrossprod(Q)          # = Q Q'       # projection onto space defined by x1
x2o  <- (Id-P) %*% Xctr[ , 2]                 # x2ctr made orthogonal to x1ctr
Xc2  <- cbind(Xctr[ , 1], x2o)                # bind to matrix
Y    <- Xc2 %*% diag(1/sqrt(colSums(Xc2^2)))  # scale columns to length 1
x <- Y[ , 2] + (1 / tan(theta)) * Y[ , 1]     # final new vector
cor(x1, x)
x1
x
R.version
library(ST522ExamSteje14)
source('~/Dropbox/SDU/ST522ExamSteje14/R/bootstrap.R')
library(ST522ExamSteje14)
source('~/Dropbox/SDU/ST522ExamSteje14/R/bootstrap.R')
library(ST522ExamSteje14)
source('~/Dropbox/SDU/ST522ExamSteje14/R/bootstrap.R')
library(ST522ExamSteje14)
source('~/Dropbox/SDU/ST522ExamSteje14/R/bootstrap.R')
library(ST522ExamSteje14)
source('~/Dropbox/SDU/ST522ExamSteje14/R/bootstrap.R')
library(ST522ExamSteje14)
View(buffon)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
chi.gof(c(3,2),0.5)
chi.gof(c(3,2),c(0.5,0.5))
chi.gof(c(3,2,3,4),0.25)
chi.gof(c(3,2,3,4),c(0.25,.25,.25,.25))
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
library(ST522ExamSteje14)
View
View(buffon)
library(ST522ExamSteje14)
